{"version":3,"sources":["hooks/UseCanvas.js","components/Canvas.js","components/Controls.js","App.js","index.js"],"names":["useCanvas","update","options","onMouseMove","context","event","onTouchMove","canvasRef","useRef","useEffect","current","getContext","canvas","onmousemove","ontouchmove","Canvas","props","center","useCallback","width","height","colors","maxDistance","pythagoras","scaleLinear","domain","range","secondColor","firstColor","colorsInverted","distance","x","y","a","b","Math","sqrt","ctx","clearRect","fillStyle","fillRect","voronoi","Delaunay","from","particles","color","beginPath","renderCell","fill","forEach","p","i","render","renderBounds","lineWidth","strokeSize","strokeStyle","strokeColor","stroke","handleMouseMove","offsetX","offsetY","ref","Controls","className","type","value","numPoints","min","max","onChange","e","onOptionsChange","target","App","window","innerWidth","innerHeight","useState","setOptions","useMemo","Array","length","random","val","key","newOptions","Object","assign","onControlChange","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c195adfe.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\"\r\n\r\nconst useCanvas = (update, options = {\r\n    onMouseMove: (context, event) => {},\r\n    onTouchMove: (context, event) => {}\r\n}) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        context.canvas.onmousemove = (event) => {\r\n            options.onMouseMove(context, event);\r\n        }\r\n        context.canvas.ontouchmove = (event) => {\r\n            options.onTouchMove(context, event);\r\n        }\r\n        update(context);\r\n    }, [update, options]);\r\n\r\n    return canvasRef;\r\n}\r\n\r\nexport default useCanvas;\r\n","import React, { useCallback } from \"react\";\r\nimport { Delaunay } from 'd3-delaunay';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport useCanvas from \"../hooks/UseCanvas\";\r\n\r\nconst Canvas = props => {\r\n    const center = useCallback(() => [props.width * 0.5, props.height * 0.5], [props.height, props.width]);\r\n\r\n    const colors = useCallback(() => {\r\n        const maxDistance = pythagoras(center()[0], center()[1]);\r\n        return scaleLinear()\r\n            .domain([0, maxDistance])\r\n            .range([props.secondColor, props.firstColor]);\r\n    }, [center, props.firstColor, props.secondColor]);\r\n\r\n    const colorsInverted = useCallback(() => {\r\n        const maxDistance = pythagoras(center()[0], center()[1]);\r\n        return scaleLinear()\r\n            .domain([0, maxDistance])\r\n            .range(['#DEDC47', '#edec9b'])\r\n    }, [center]);\r\n\r\n    const distance = useCallback((x, y) => {\r\n        const a = center()[0] - x;\r\n        const b = center()[1] - y;\r\n        return pythagoras(a, b);\r\n    }, [center]);\r\n\r\n    const pythagoras = (a, b) => Math.sqrt(a * a + b * b);\r\n\r\n    const update = useCallback(ctx => {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        const delaunay = Delaunay.from(props.particles);\r\n        const voronoi = delaunay.voronoi([0.5, 0.5, ctx.canvas.width, ctx.canvas.height]);\r\n\r\n        const color = colorsInverted()(distance(props.particles[0][0], props.particles[0][1]));\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        voronoi.renderCell(0, ctx);\r\n        ctx.fill();\r\n\r\n        props.particles.forEach((p, i) => {\r\n            if (i === 0) {\r\n                return;\r\n            }\r\n            const color = colors()(distance(p[0], p[1]));\r\n            ctx.fillStyle = color;\r\n            ctx.beginPath();\r\n            voronoi.renderCell(i, ctx);\r\n            ctx.fill();\r\n        });\r\n\r\n        ctx.beginPath();\r\n        voronoi.render(ctx);\r\n        voronoi.renderBounds(ctx);\r\n        ctx.lineWidth = props.strokeSize;\r\n        ctx.strokeStyle = props.strokeColor;\r\n        ctx.stroke();\r\n    }, [colors, colorsInverted, distance, props.particles, props.strokeColor, props.strokeSize]);\r\n\r\n    const handleMouseMove = useCallback((context, event) => {\r\n        props.particles[0] = [event.offsetX, event.offsetY];\r\n        update(context);\r\n    }, [props.particles, update]);\r\n\r\n    const canvasRef = useCanvas(update, {\r\n        onMouseMove: handleMouseMove,\r\n        onTouchMove: handleMouseMove\r\n    });\r\n\r\n    return <canvas ref={canvasRef} {...props} />\r\n}\r\n\r\nexport default Canvas;\r\n","import './Controls.css';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Controls = props => {\r\n\r\n    const minNumPoints = 1;\r\n    const maxNumPoints = 300;\r\n\r\n    const minStrokeSize = 0;\r\n    const maxStrokeSize = 20;\r\n\r\n    return <div className=\"Controls\">\r\n        <fieldset>\r\n            <div>\r\n                <label>Number of Points:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={props.options.numPoints}\r\n                    min={minNumPoints}\r\n                    max={maxNumPoints}\r\n                    onChange={(e) => props.onOptionsChange(e.target.value || 1, 'numPoints')}\r\n                >\r\n                </input>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Outer Color:</label>\r\n                <input\r\n                    type=\"color\"\r\n                    value={props.options.firstColor}\r\n                    onChange={(e) => props.onOptionsChange(e.target.value, 'firstColor')}\r\n                >\r\n                </input>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Inner Color:</label>\r\n                <input\r\n                    type=\"color\"\r\n                    value={props.options.secondColor}\r\n                    onChange={(e) => props.onOptionsChange(e.target.value, 'secondColor')}\r\n                >\r\n                </input>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Stroke Color:</label>\r\n                <input\r\n                    type=\"color\"\r\n                    value={props.options.strokeColor}\r\n                    onChange={(e) => props.onOptionsChange(e.target.value, 'strokeColor')}\r\n                >\r\n                </input>\r\n            </div>\r\n\r\n            <div>\r\n                <label>Stroke Size:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={props.options.strokeSize}\r\n                    min={minStrokeSize}\r\n                    max={maxStrokeSize}\r\n                    onChange={(e) => props.onOptionsChange(e.target.value, 'strokeSize')}\r\n                >\r\n                </input>\r\n            </div>\r\n\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nControls.propTypes = {\r\n    options: PropTypes.object.isRequired,\r\n    onOptionsChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Controls;","import { useMemo, useState } from 'react';\r\nimport './App.css';\r\nimport Canvas from './components/Canvas';\r\nimport Controls from './components/Controls';\r\n\r\nfunction App() {\r\n\r\n  const widthFactor = 0.75;\r\n  const heightFactor = 0.75;\r\n  const width = window.innerWidth * widthFactor;\r\n  const height = window.innerHeight * heightFactor;\r\n\r\n  const [options, setOptions] = useState({\r\n    numPoints: 50,\r\n    firstColor: '#d00000',\r\n    secondColor: '#ffffff',\r\n    strokeSize: 1,\r\n    strokeColor: '#000000'\r\n  });\r\n\r\n  const onControlChange = (val, key) => {\r\n    let newOptions = { ...options };\r\n    newOptions[key] = val;\r\n    setOptions(Object.assign({}, newOptions));\r\n  }\r\n\r\n  const particles = useMemo(\r\n    () => Array.from({ length: options.numPoints }, () => [Math.random() * width, Math.random() * height]),\r\n    [height, options.numPoints, width]\r\n  );\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Canvas\">\r\n        <Canvas\r\n          height={window.innerHeight * heightFactor}\r\n          width={window.innerWidth * widthFactor}\r\n          numPoints={options.numPoints}\r\n          particles={particles}\r\n          firstColor={options.firstColor}\r\n          secondColor={options.secondColor}\r\n          strokeSize={options.strokeSize}\r\n          strokeColor={options.strokeColor}\r\n        />\r\n      </div>\r\n      <div className=\"Controls\">\r\n        <Controls\r\n          options={options}\r\n          onOptionsChange={(val, key) => onControlChange(val, key)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}