{"version":3,"sources":["components/Canvas.js","App.js","index.js"],"names":["Canvas","props","canvasRef","useRef","particles","Array","from","length","Math","random","width","height","draw","useCallback","ctx","clearRect","canvas","fillStyle","fillRect","voronoi","Delaunay","beginPath","render","renderBounds","strokeStyle","stroke","useEffect","context","current","getContext","ref","App","className","window","innerHeight","innerWidth","ReactDOM","StrictMode","document","getElementById"],"mappings":"iOAkCeA,EA/BA,SAAAC,GACX,IACMC,EAAYC,iBAAO,MACnBC,EAAYC,MAAMC,KAAK,CAACC,OAFpB,MAEgC,iBAAM,CAACC,KAAKC,SAAWR,EAAMS,MAAOF,KAAKC,SAAWR,EAAMU,WAE9FC,EAAOC,uBAAY,SAAAC,GACrBA,EAAIC,UAAU,EAAG,EAAGD,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,QACjDG,EAAIG,UAAY,UAChBH,EAAII,SAAS,EAAG,EAAGJ,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,QAEhD,IACMQ,EADWC,IAASd,KAAKF,GACNe,QAAQ,CAAC,GAAK,GAAKL,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,SACzEG,EAAIC,UAAU,EAAG,EAAGD,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,QAEjDG,EAAIO,YACJF,EAAQG,OAAOR,GACfK,EAAQI,aAAaT,GACrBA,EAAIU,YAAc,OAClBV,EAAIW,WACL,CAACrB,IASJ,OAPAsB,qBAAU,WACN,IACMC,EADSzB,EAAU0B,QACFC,WAAW,MAElCjB,EAAKe,KACN,CAACf,IAEG,oCAAQkB,IAAK5B,GAAeD,KChBxB8B,MAZf,WAKE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CAAQrB,OAJS,IAIDsB,OAAOC,YAA4BxB,MALnC,IAK0CuB,OAAOE,gBCLvEC,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.524966d6.chunk.js","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport { Delaunay } from 'd3-delaunay';\r\n\r\nconst Canvas = props => {\r\n    const n = 200;\r\n    const canvasRef = useRef(null);\r\n    const particles = Array.from({length: n}, () => [Math.random() * props.width, Math.random() * props.height]);\r\n\r\n    const draw = useCallback(ctx => {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        const delaunay = Delaunay.from(particles);\r\n        const voronoi = delaunay.voronoi([0.5, 0.5, ctx.canvas.width, ctx.canvas.height]);\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        ctx.beginPath();\r\n        voronoi.render(ctx);\r\n        voronoi.renderBounds(ctx);\r\n        ctx.strokeStyle = '#000';\r\n        ctx.stroke();\r\n    }, [particles]);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        const context = canvas.getContext('2d')\r\n        \r\n        draw(context)\r\n    }, [draw]);\r\n\r\n    return <canvas ref={canvasRef} {...props} />\r\n}\r\n\r\nexport default Canvas;\r\n","import './App.css';\nimport Canvas from './components/Canvas';\n\nfunction App() {\n\n  const widthFactor = 0.75;\n  const heightFactor = 0.75\n\n  return (\n    <div className=\"App\">\n      <Canvas height={window.innerHeight * heightFactor} width={window.innerWidth * widthFactor} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}