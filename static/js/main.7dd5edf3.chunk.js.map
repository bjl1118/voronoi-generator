{"version":3,"sources":["hooks/UseCanvas.js","utils/utils.js","components/Canvas.js","components/Controls.js","animations/Expand.js","animations/Orbit.js","App.js","index.js"],"names":["useCanvas","update","options","onMouseMove","context","event","onTouchMove","canvasRef","useRef","useEffect","animationFrameId","current","getContext","frameCount","canvas","onmousemove","ontouchmove","draw","window","requestAnimationFrame","cancelAnimationFrame","pythagoras","a","b","Math","sqrt","vector","point1","point2","distance","x","y","x2","y2","Canvas","props","center","useCallback","width","height","colors","maxDistance","scaleLinear","domain","range","secondColor","firstColor","ctx","clearRect","fillStyle","fillRect","voronoi","Delaunay","from","particles","accentColor","beginPath","renderCell","fill","forEach","p","i","next","animation","color","render","renderBounds","lineWidth","strokeSize","strokeStyle","strokeColor","stroke","handleMouseMove","offsetX","offsetY","ref","Controls","className","type","value","numPoints","min","numPointsMin","max","numPointsMax","onChange","e","onOptionsChange","target","animations","name","onClick","onResetClick","expand","index","centerPoint","v","normalize","round","orbit","radius","radians","atan2","newRadians","newX","cos","newY","sin","App","innerWidth","innerHeight","none","useState","setOptions","showMenu","setShowMenu","randomParticles","Array","length","random","setParticles","aria-hidden","val","key","resetPoints","newOptions","Object","assign","onControlChange","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dd5edf3.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nconst useCanvas = (\r\n  update,\r\n  options = {\r\n    onMouseMove: (context, event) => {},\r\n    onTouchMove: (context, event) => {},\r\n  }\r\n) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    let frameCount = 0;\r\n    let animationFrameId;\r\n    context.canvas.onmousemove = (event) => {\r\n      options.onMouseMove(context, event);\r\n    };\r\n    context.canvas.ontouchmove = (event) => {\r\n      options.onTouchMove(context, event);\r\n    };\r\n\r\n    const draw = () => {\r\n      frameCount++;\r\n      update(context, frameCount);\r\n      animationFrameId = window.requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n\r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [update, options]);\r\n\r\n  return canvasRef;\r\n};\r\n\r\nexport default useCanvas;\r\n","export const pythagoras = (a, b) => Math.sqrt(a * a + b * b);\r\n\r\nexport const vector = (point1, point2) => [\r\n    point2[0] * 1.0 - point1[0] * 1.0,\r\n    point2[1] * 1.0 - point1[1] * 1.0,\r\n];\r\n\r\nexport const normalize = (point1, point2) => {\r\n    const v = vector(point1, point2);\r\n    const distance = pythagoras(v[0], v[1]);\r\n    const xNormal = v[0] / distance;\r\n    const yNormal = v[1] / distance;\r\n    return [xNormal, yNormal];\r\n}\r\n\r\nexport const distance = (x, y, x2, y2) => {\r\n    return pythagoras(x2 - x, y2 - y);\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { Delaunay } from \"d3-delaunay\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport useCanvas from \"../hooks/UseCanvas\";\r\nimport { pythagoras, distance } from \"../utils/utils\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Canvas = (props) => {\r\n  const center = useCallback(\r\n    () => [props.width * 0.5, props.height * 0.5],\r\n    [props.height, props.width]\r\n  );\r\n\r\n  const colors = useCallback(() => {\r\n    const maxDistance = pythagoras(center()[0], center()[1]);\r\n    return scaleLinear()\r\n      .domain([0, maxDistance])\r\n      .range([props.secondColor, props.firstColor]);\r\n  }, [center, props.firstColor, props.secondColor]);\r\n\r\n  const update = useCallback(\r\n    (ctx, frameCount) => {\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      ctx.fillStyle = \"#ffffff\";\r\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n      const delaunay = Delaunay.from(props.particles);\r\n      const voronoi = delaunay.voronoi([\r\n        0.5,\r\n        0.5,\r\n        ctx.canvas.width,\r\n        ctx.canvas.height,\r\n      ]);\r\n\r\n      ctx.fillStyle = props.accentColor;\r\n      ctx.beginPath();\r\n      voronoi.renderCell(0, ctx);\r\n      ctx.fill();\r\n\r\n      props.particles.forEach((p, i) => {\r\n        if (i === 0) {\r\n          return;\r\n        }\r\n        const next = props.animation(props.particles, i, ctx, frameCount);\r\n        if (next) {\r\n          props.particles[i] = next;\r\n        }\r\n\r\n        const color = colors()(distance(p[0], p[1], center()[0], center()[1]));\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        voronoi.renderCell(i, ctx);\r\n        ctx.fill();\r\n      });\r\n\r\n      ctx.beginPath();\r\n      voronoi.render(ctx);\r\n      voronoi.renderBounds(ctx);\r\n      ctx.lineWidth = props.strokeSize;\r\n      ctx.strokeStyle = props.strokeColor;\r\n      ctx.stroke();\r\n    },\r\n    [\r\n      center,\r\n      colors,\r\n      props\r\n    ]\r\n  );\r\n\r\n  const handleMouseMove = useCallback(\r\n    (context, event) => {\r\n      props.particles[0] = [event.offsetX, event.offsetY];\r\n      update(context);\r\n    },\r\n    [props.particles, update]\r\n  );\r\n\r\n  const canvasRef = useCanvas(update, {\r\n    onMouseMove: handleMouseMove,\r\n    onTouchMove: handleMouseMove,\r\n  });\r\n\r\n  return <canvas\r\n    ref={canvasRef}\r\n    width={props.width}\r\n    height={props.height}\r\n  />;\r\n};\r\n\r\nCanvas.propTypes = {\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  particles: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\r\n  numPoints: PropTypes.number.isRequired,\r\n  firstColor: PropTypes.string.isRequired,\r\n  secondColor: PropTypes.string.isRequired,\r\n  accentColor: PropTypes.string.isRequired,\r\n  strokeSize: PropTypes.number.isRequired,\r\n  strokeColor: PropTypes.string.isRequired,\r\n  animation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Canvas;\r\n","import './Controls.css';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Controls = props => {\r\n    const minStrokeSize = 0;\r\n    const maxStrokeSize = 20;\r\n\r\n    return <div className=\"Controls\">\r\n        <fieldset>\r\n            <div className=\"table\">\r\n                <div>\r\n                    <label>Number of Points:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={props.options.numPoints}\r\n                        min={props.numPointsMin}\r\n                        max={props.numPointsMax}\r\n                        onChange={(e) => props.onOptionsChange(e.target.value, 'numPoints')}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Outer Color:</label>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={props.options.firstColor}\r\n                        onChange={(e) => props.onOptionsChange(e.target.value, 'firstColor')}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Inner Color:</label>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={props.options.secondColor}\r\n                        onChange={(e) => props.onOptionsChange(e.target.value, 'secondColor')}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Accent Color:</label>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={props.options.accentColor}\r\n                        onChange={(e) => props.onOptionsChange(e.target.value, 'accentColor')}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Stroke Color:</label>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={props.options.strokeColor}\r\n                        onChange={(e) => props.onOptionsChange(e.target.value, 'strokeColor')}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Stroke Size:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={props.options.strokeSize}\r\n                        min={minStrokeSize}\r\n                        max={maxStrokeSize}\r\n                        onChange={(e) => props.onOptionsChange(e.target.value, 'strokeSize')}\r\n                    >\r\n                    </input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Animation:</label>\r\n                    <select onChange={(e) => props.onOptionsChange(props.animations[e.target.value], 'animation')} name=\"animations\">\r\n                        <option value=\"none\">None</option>\r\n                        <option value=\"expand\">Expand</option>\r\n                        <option value=\"orbit\">Orbit</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='buttonContainer'>\r\n                <button onClick={() => props.onResetClick()}>Reset</button>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n}\r\n\r\nControls.propTypes = {\r\n    options: PropTypes.shape({\r\n        numPoints: PropTypes.number,\r\n        firstColor: PropTypes.string,\r\n        secondColor: PropTypes.string,\r\n        accentColor: PropTypes.string,\r\n        strokeSize: PropTypes.number,\r\n        strokeColor: PropTypes.string,\r\n        animation: PropTypes.func\r\n    }).isRequired,\r\n    onOptionsChange: PropTypes.func.isRequired,\r\n    onResetClick: PropTypes.func.isRequired,\r\n    animations: PropTypes.objectOf(PropTypes.func).isRequired,\r\n    numPointsMax: PropTypes.number,\r\n    numPointsMin: PropTypes.number\r\n}\r\n\r\nexport default Controls;","import { normalize } from \"../utils/utils\";\r\n\r\nconst expand = (particles, index, ctx) => {\r\n    if (index === 0) {\r\n        return;\r\n    }\r\n    const centerPoint = [ctx.canvas.width / 2, ctx.canvas.height / 2];\r\n    const p = particles[index];\r\n    const vector = normalize(centerPoint, p);\r\n    let nextX = Math.round((p[0] + vector[0]) * 100) / 100;\r\n    let nextY = Math.round((p[1] + vector[1]) * 100) / 100;\r\n    return [nextX, nextY];\r\n}\r\n\r\nexport default expand;","import { distance, vector } from \"../utils/utils\";\r\n\r\nconst orbit = (particles, index, ctx, frameCount = 0) => {\r\n    if (frameCount % 1 === 0) {\r\n        const centerPoint = [ctx.canvas.width / 2, ctx.canvas.height / 2];\r\n        const p = particles[index];\r\n        const radius = distance(p[0], p[1], centerPoint[0], centerPoint[1])\r\n        const v = vector(centerPoint, p);\r\n        const radians = Math.atan2(v[1], v[0]);\r\n        const newRadians = index % 2 === 0 ? radians + 0.003 : radians - 0.003;\r\n        const newX = centerPoint[0] + (radius * Math.cos(newRadians))\r\n        const newY = centerPoint[1] + (radius * Math.sin(newRadians))\r\n        return [newX, newY];\r\n    }\r\n    return particles[index];\r\n\r\n}\r\n\r\nexport default orbit;","import { useCallback, useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport Canvas from './components/Canvas';\r\nimport Controls from './components/Controls';\r\nimport expand from \"./animations/Expand\";\r\nimport orbit from './animations/Orbit';\r\n\r\nfunction App() {\r\n\r\n  const widthFactor = 0.75;\r\n  const heightFactor = 0.75;\r\n  const numPointsMin = 1;\r\n  const numPointsMax = 500;\r\n  const width = window.innerWidth * widthFactor;\r\n  const height = window.innerHeight * heightFactor;\r\n\r\n  const animations = {\r\n    none: () => { },\r\n    expand: (particles, index, ctx, frameCount) => expand(particles, index, ctx),\r\n    orbit: (particles, index, ctx, frameCount) => orbit(particles, index, ctx, frameCount)\r\n  }\r\n\r\n  const [options, setOptions] = useState({\r\n    numPoints: 50,\r\n    firstColor: '#23D100',\r\n    secondColor: '#135FC3',\r\n    accentColor: '#DEDC47',\r\n    strokeSize: 1,\r\n    strokeColor: '#000000',\r\n    animation: animations['none']\r\n  });\r\n\r\n  const [showMenu, setShowMenu] = useState(true);\r\n\r\n  const randomParticles = useCallback(\r\n    () => Array.from({ length: options.numPoints }, () => [Math.random() * width, Math.random() * height]),\r\n    [height, width, options.numPoints]\r\n  );\r\n\r\n  const [particles, setParticles] = useState(randomParticles());\r\n\r\n  useEffect(() => {\r\n    if (options.numPoints >= numPointsMin && options.numPoints <= numPointsMax) {\r\n      setParticles(randomParticles(options.numPoints));\r\n    }\r\n  }, [options.numPoints, randomParticles]);\r\n\r\n  const onControlChange = (val, key) => {\r\n    let newOptions = { ...options };\r\n    newOptions[key] = val;\r\n    setOptions(Object.assign({}, newOptions));\r\n  }\r\n\r\n  const onResetClick = () => {\r\n    setParticles(randomParticles(options.numPoints));\r\n  }\r\n\r\n  const toggleMenu = () => {\r\n    setShowMenu(!showMenu)\r\n    setParticles(randomParticles())\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Canvas\">\r\n        <Canvas\r\n          height={window.innerHeight * heightFactor}\r\n          width={window.innerWidth * widthFactor}\r\n          particles={particles}\r\n          {...options}\r\n        />\r\n        <span className=\"ToggleButton\">\r\n          <button onClick={() => toggleMenu()}>\r\n            {\r\n              showMenu ?\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i> :\r\n                <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n            }\r\n          </button>\r\n        </span>\r\n      </div>\r\n      {\r\n        showMenu &&\r\n        <div className=\"Controls\">\r\n          <Controls\r\n            options={options}\r\n            animations={animations}\r\n            numPointsMax={numPointsMax}\r\n            numPointsMin={numPointsMin}\r\n            onResetClick={() => onResetClick()}\r\n            onOptionsChange={(val, key, resetPoints) => onControlChange(val, key, resetPoints)}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}