{"version":3,"sources":["components/Canvas.js","App.js","index.js"],"names":["Canvas","props","canvasRef","useRef","particles","Array","from","length","Math","random","width","height","update","useCallback","ctx","clearRect","canvas","fillStyle","fillRect","voronoi","Delaunay","beginPath","render","renderBounds","strokeStyle","stroke","handleMouseMove","context","event","layerX","layerY","useEffect","current","getContext","onmousemove","ref","App","className","window","innerHeight","innerWidth","ReactDOM","StrictMode","document","getElementById"],"mappings":"iOAwCeA,EArCA,SAAAC,GACX,IACMC,EAAYC,iBAAO,MACnBC,EAAYC,MAAMC,KAAK,CAAEC,OAFrB,KAEkC,iBAAM,CAACC,KAAKC,SAAWR,EAAMS,MAAOF,KAAKC,SAAWR,EAAMU,WAEhGC,EAASC,uBAAY,SAAAC,GACvBA,EAAIC,UAAU,EAAG,EAAGD,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,QACjDG,EAAIG,UAAY,UAChBH,EAAII,SAAS,EAAG,EAAGJ,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,QAEhD,IACMQ,EADWC,IAASd,KAAKF,GACNe,QAAQ,CAAC,GAAK,GAAKL,EAAIE,OAAON,MAAOI,EAAIE,OAAOL,SAEzEG,EAAIO,YACJF,EAAQG,OAAOR,GACfK,EAAQI,aAAaT,GACrBA,EAAIU,YAAc,OAClBV,EAAIW,WACL,CAACrB,IAEEsB,EAAkBb,uBAAY,SAACc,EAASC,GAC1CxB,EAAU,GAAK,CAACwB,EAAMC,OAAQD,EAAME,QACpClB,EAAOe,KACR,CAACvB,EAAWQ,IAWf,OATAmB,qBAAU,WACN,IACMJ,EADSzB,EAAU8B,QACFC,WAAW,MAClCN,EAAQX,OAAOkB,YAAc,SAAAN,GACzBF,EAAgBC,EAASC,IAE7BhB,EAAOe,KACR,CAACD,EAAiBd,IAEd,oCAAQuB,IAAKjC,GAAeD,KCtBxBmC,MAZf,WAKE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,CAAQ1B,OAJS,IAID2B,OAAOC,YAA4B7B,MALnC,IAK0C4B,OAAOE,gBCLvEC,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7dff57e7.chunk.js","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport { Delaunay } from 'd3-delaunay';\r\n\r\nconst Canvas = props => {\r\n    const n = 50;\r\n    const canvasRef = useRef(null);\r\n    const particles = Array.from({ length: n }, () => [Math.random() * props.width, Math.random() * props.height]);\r\n\r\n    const update = useCallback(ctx => {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        const delaunay = Delaunay.from(particles);\r\n        const voronoi = delaunay.voronoi([0.5, 0.5, ctx.canvas.width, ctx.canvas.height]);\r\n\r\n        ctx.beginPath();\r\n        voronoi.render(ctx);\r\n        voronoi.renderBounds(ctx);\r\n        ctx.strokeStyle = '#000';\r\n        ctx.stroke();\r\n    }, [particles]);\r\n\r\n    const handleMouseMove = useCallback((context, event) => {\r\n        particles[0] = [event.layerX, event.layerY];\r\n        update(context);\r\n    }, [particles, update]);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        context.canvas.onmousemove = event => {\r\n            handleMouseMove(context, event);\r\n        };\r\n        update(context)\r\n    }, [handleMouseMove, update]);\r\n\r\n    return <canvas ref={canvasRef} {...props} />\r\n}\r\n\r\nexport default Canvas;\r\n","import './App.css';\r\nimport Canvas from './components/Canvas';\r\n\r\nfunction App() {\r\n\r\n  const widthFactor = 0.75;\r\n  const heightFactor = 0.75\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Canvas height={window.innerHeight * heightFactor} width={window.innerWidth * widthFactor} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}